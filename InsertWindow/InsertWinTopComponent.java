/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */
package org.SpaceEngineDatabase.InsertWindow;

import SEdbLib.*;
import java.awt.event.ItemEvent;
import java.util.Hashtable;
import java.util.Map;
import org.netbeans.api.settings.ConvertAsProperties;
import org.openide.awt.ActionID;
import org.openide.windows.TopComponent;
import org.openide.util.NbBundle.Messages;
import org.openide.windows.WindowManager;

/**
 * Top component which displays something.
 */
@ConvertAsProperties(
        dtd = "-//org.SpaceEngineDatabase.InsertWindow//InsertWin//EN",
        autostore = false)
@TopComponent.Description(
        preferredID = "InsertWinTopComponent",
        //iconBase="SET/PATH/TO/ICON/HERE", 
        persistenceType = TopComponent.PERSISTENCE_NEVER)
@TopComponent.Registration(mode = "output", openAtStartup = true)
@ActionID(category = "Window", id = "org.SpaceEngineDatabase.InsertWindow.InsertWinTopComponent")
@TopComponent.OpenActionRegistration(
        displayName = "#CTL_InsertWinAction",
        preferredID = "InsertWinTopComponent")
@Messages({
    "CTL_InsertWinAction=InsertWin",
    "CTL_InsertWinTopComponent=Insertion Window",
    "HINT_InsertWinTopComponent=This is a InsertWin window"
})
public final class InsertWinTopComponent extends TopComponent {

    /**
     *
     */
    public InsertWinTopComponent() {
        initComponents();
        setName(Bundle.CTL_InsertWinTopComponent());
        setToolTipText(Bundle.HINT_InsertWinTopComponent());
        TopComponent tc = WindowManager.getDefault().findTopComponent("SEFormTopComponent");
        um = tc.getLookup().lookup(UserManager.class);
        if(!um.getLog())
        {this.setEnabled(false);
        jButton1.setEnabled(false);}
        flags.put("isInNeb", false);
        flags.put("isInClus", false);
        flags.put("isMultiple", false);
        flags.put("isMoon", false);
        flags.put("isAsteroid", false);
    }
    
        @Override
    public boolean canClose()
    {return false;}

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jTextField1 = new javax.swing.JTextField();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jTextField2 = new javax.swing.JTextField();
        jLabel4 = new javax.swing.JLabel();
        jTextField3 = new javax.swing.JTextField();
        jButton1 = new javax.swing.JButton();
        jToggleButton1 = new javax.swing.JToggleButton();
        jToggleButton2 = new javax.swing.JToggleButton();
        jToggleButton3 = new javax.swing.JToggleButton();
        jToggleButton4 = new javax.swing.JToggleButton();
        jToggleButton5 = new javax.swing.JToggleButton();
        jList1 = new javax.swing.JComboBox<String>();

        jPanel1.setBackground(new java.awt.Color(153, 153, 153));

        org.openide.awt.Mnemonics.setLocalizedText(jLabel1, org.openide.util.NbBundle.getMessage(InsertWinTopComponent.class, "InsertWinTopComponent.jLabel1.text")); // NOI18N

        jTextField1.setText(org.openide.util.NbBundle.getMessage(InsertWinTopComponent.class, "InsertWinTopComponent.jTextField1.text")); // NOI18N

        org.openide.awt.Mnemonics.setLocalizedText(jLabel2, org.openide.util.NbBundle.getMessage(InsertWinTopComponent.class, "InsertWinTopComponent.jLabel2.text")); // NOI18N

        org.openide.awt.Mnemonics.setLocalizedText(jLabel3, org.openide.util.NbBundle.getMessage(InsertWinTopComponent.class, "InsertWinTopComponent.jLabel3.text")); // NOI18N

        jTextField2.setText(org.openide.util.NbBundle.getMessage(InsertWinTopComponent.class, "InsertWinTopComponent.jTextField2.text")); // NOI18N
        jTextField2.setMaximumSize(new java.awt.Dimension(285, 20));
        jTextField2.setMinimumSize(new java.awt.Dimension(285, 20));
        jTextField2.setPreferredSize(new java.awt.Dimension(200, 130));

        org.openide.awt.Mnemonics.setLocalizedText(jLabel4, org.openide.util.NbBundle.getMessage(InsertWinTopComponent.class, "InsertWinTopComponent.jLabel4.text")); // NOI18N

        jTextField3.setText(org.openide.util.NbBundle.getMessage(InsertWinTopComponent.class, "InsertWinTopComponent.jTextField3.text")); // NOI18N

        org.openide.awt.Mnemonics.setLocalizedText(jButton1, org.openide.util.NbBundle.getMessage(InsertWinTopComponent.class, "InsertWinTopComponent.jButton1.text")); // NOI18N
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                RegisterObjectEvent(evt);
            }
        });

        org.openide.awt.Mnemonics.setLocalizedText(jToggleButton1, org.openide.util.NbBundle.getMessage(InsertWinTopComponent.class, "InsertWinTopComponent.jToggleButton1.text")); // NOI18N
        jToggleButton1.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                NebulaStateChanged(evt);
            }
        });

        org.openide.awt.Mnemonics.setLocalizedText(jToggleButton2, org.openide.util.NbBundle.getMessage(InsertWinTopComponent.class, "InsertWinTopComponent.jToggleButton2.text")); // NOI18N
        jToggleButton2.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                ClusterStateChange(evt);
            }
        });

        org.openide.awt.Mnemonics.setLocalizedText(jToggleButton3, org.openide.util.NbBundle.getMessage(InsertWinTopComponent.class, "InsertWinTopComponent.jToggleButton3.text")); // NOI18N
        jToggleButton3.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                MultipleStarChange(evt);
            }
        });

        org.openide.awt.Mnemonics.setLocalizedText(jToggleButton4, org.openide.util.NbBundle.getMessage(InsertWinTopComponent.class, "InsertWinTopComponent.jToggleButton4.text")); // NOI18N
        jToggleButton4.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                isMoonStateChange(evt);
            }
        });

        org.openide.awt.Mnemonics.setLocalizedText(jToggleButton5, org.openide.util.NbBundle.getMessage(InsertWinTopComponent.class, "InsertWinTopComponent.jToggleButton5.text")); // NOI18N
        jToggleButton5.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                IsAsteroidStateChange(evt);
            }
        });

        jList1.setModel(new javax.swing.DefaultComboBoxModel<String>(new String[] { "Galaxy", "Nebula", "Cluster", "Star", "Body" }));
        jList1.setSelectedItem("Galaxy");
        jList1.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                jList1ItemStateChanged(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel4)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jTextField3, javax.swing.GroupLayout.PREFERRED_SIZE, 411, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jTextField2, javax.swing.GroupLayout.PREFERRED_SIZE, 285, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jTextField1, javax.swing.GroupLayout.PREFERRED_SIZE, 194, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(jToggleButton1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jToggleButton2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jToggleButton3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jToggleButton4, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jToggleButton5, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))
                .addGap(27, 27, 27))
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(219, 219, 219)
                .addComponent(jButton1)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addComponent(jLabel1)
                        .addComponent(jLabel2))
                    .addComponent(jLabel3))
                .addGap(18, 18, 18)
                .addComponent(jList1, javax.swing.GroupLayout.PREFERRED_SIZE, 111, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(329, 329, 329))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addContainerGap()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 19, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jList1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jTextField1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel2))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel3)
                            .addComponent(jTextField2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(40, 40, 40)
                        .addComponent(jToggleButton1)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jToggleButton2)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jToggleButton3)
                        .addGap(10, 10, 10)
                        .addComponent(jToggleButton4)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jToggleButton5)))
                .addGap(41, 41, 41)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel4)
                    .addComponent(jTextField3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jButton1)
                .addGap(23, 23, 23))
        );

        jToggleButton1.setVisible(false);
        jToggleButton2.setVisible(false);
        jToggleButton3.setVisible(false);
        jToggleButton4.setVisible(false);
        jToggleButton5.setVisible(false);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
        );
    }// </editor-fold>//GEN-END:initComponents
    private void jList1ItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_jList1ItemStateChanged
        ListSelect(evt);
    }//GEN-LAST:event_jList1ItemStateChanged
    private void MultipleStarChange(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_MultipleStarChange
        Object temp = jList1.getSelectedItem();
        String type = temp.toString();
        if(jToggleButton3.isVisible() == true){
            AlterMultiple(evt.getStateChange() == ItemEvent.SELECTED, type);}
    }//GEN-LAST:event_MultipleStarChange
   
    private void ClusterStateChange(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_ClusterStateChange
        if(jToggleButton2.isVisible() == true){    
        AlterCluster(evt.getStateChange() == ItemEvent.SELECTED);}
    }//GEN-LAST:event_ClusterStateChange
    private void NebulaStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_NebulaStateChanged
        if(jToggleButton1.isVisible() == true){
            AlterNebula(evt.getStateChange() == ItemEvent.SELECTED);}
    }//GEN-LAST:event_NebulaStateChanged
    private void RegisterObjectEvent(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_RegisterObjectEvent
        Object Otype = jList1.getSelectedItem();
        String rtype = Otype.toString();
        String name = jTextField1.getText();
        String obs = jTextField2.getText();
        String imgUrl = jTextField3.getText();
        String delims = "[ -.]+";
        String[] tokens = name.split(delims);
        String author = um.getNick();
        im = new InsertManager();
        im.BuildManager(name, obs, rtype, imgUrl, author, tokens, flags);
        InsertCheck ic = new InsertCheck(this);
        ic.setEnabled(true);
        ic.setVisible(true);
    }//GEN-LAST:event_RegisterObjectEvent

    private void isMoonStateChange(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_isMoonStateChange
        if(jToggleButton4.isVisible() == true){
            AlterMoon(evt.getStateChange() == ItemEvent.SELECTED);}
    }//GEN-LAST:event_isMoonStateChange

    private void IsAsteroidStateChange(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_IsAsteroidStateChange
       if(jToggleButton5.isVisible() == true){
            AlterAsteroid(evt.getStateChange() == ItemEvent.SELECTED);}
    }//GEN-LAST:event_IsAsteroidStateChange
    public void StarButtonOn() {
        jToggleButton1.setVisible(true);
        jToggleButton2.setVisible(true);
        jToggleButton3.setVisible(true);
    }
    public void BodyButtonOn() {
        jToggleButton4.setVisible(true);
        jToggleButton5.setVisible(true);
    }
    public void StarButtonOff() {
        jToggleButton1.setVisible(false);
        jToggleButton2.setVisible(false);
        jToggleButton3.setVisible(false);
        jToggleButton1.setSelected(false);
        jToggleButton2.setSelected(false);
        jToggleButton3.setSelected(false);
        jToggleButton1.setEnabled(true);
        jToggleButton2.setEnabled(true);
    }
    public void BodyButtonOff() {
        jToggleButton4.setVisible(false);
        jToggleButton5.setVisible(false);
        jToggleButton4.setSelected(false);
        jToggleButton5.setSelected(false);
        jToggleButton4.setEnabled(true);
        jToggleButton5.setEnabled(true);
    }
    public void ListSelect(java.awt.event.ItemEvent evt) {
        Object temp = evt.getItem();
        String type = temp.toString();
        switch (type) {
            case "Galaxy":
                jTextField1.setText("RG x-x-x-G");
                StarButtonOff();
                BodyButtonOff();
                break;
            case "Cluster":
                jTextField1.setText("RC x-x-x-G-C");
                StarButtonOff();
                BodyButtonOff();
                break;
            case "Nebula":
                jTextField1.setText("RN x-x-x-G-N");
                StarButtonOff();
                BodyButtonOff();
                break;
            case "Star":
                jTextField1.setText("RS x-x-x-G-C-x-x-S");
                StarButtonOn();
                BodyButtonOff();
                break;
            case "Body":
                jTextField1.setText("RS x-x-x-G-x-x-x-S y");
                StarButtonOn();
                BodyButtonOn();
                break;
            default:
                jTextField1.setText("RG x-x-x-G");
        }
    }
    public void AlterCluster(Boolean add) {
        String str = jTextField1.getText();
        String tokens[] = str.split("[ ]+");
        str = "";
        if (add) {
            tokens[0] = tokens[0].concat("C");
            tokens[1] = "x-x-x-G-C-x-x-S";
            jToggleButton1.setEnabled(false);
            flags.put("isInClus", true);
        } else {
            tokens[0] = tokens[0].replace("C", " ");
            tokens[1] = "x-x-x-G-x-x-x-S";
            jToggleButton1.setEnabled(true);
            flags.put("isInClus", false);
        }
        for (int i = 0; i < tokens.length; i++) {
            str = str + tokens[i] + " ";
        }
        jTextField1.setText(str);
    }
    public void AlterNebula(Boolean add) {
        String str = jTextField1.getText();
        String tokens[] = str.split("[ ]+");
        str = "";
        if (add) {
            tokens[0] = tokens[0].concat("N");
            tokens[1] = "x-x-x-x-N-S";
            jToggleButton2.setEnabled(false);
            flags.put("isInNeb", true);
        } else {
            tokens[0] = tokens[0].replace("N", "");
            tokens[1] = "x-x-x-G-x-x-x-S";
            jToggleButton2.setEnabled(true);
            flags.put("isInNeb", false);
        }
        for (int i = 0; i < tokens.length; i++) {
            str = str + tokens[i] + " ";
        }
        jTextField1.setText(str);
    }
    public void AlterMoon(Boolean add){
        String str = jTextField1.getText();
        String tokens[] = str.split("[ ]+");
        str = "";
        if (add) {
            tokens[2] = tokens[2].concat(".z");
            jToggleButton5.setEnabled(false);
            flags.put("isMoon", true);
        } else {
            tokens[2] = tokens[2].replace(".z", "");
            jToggleButton5.setEnabled(true);
            flags.put("isMoon", false);
        }
        for (int i = 0; i < tokens.length; i++) {
            str = str + tokens[i] + " ";
        }
        jTextField1.setText(str);
    }
    public void AlterAsteroid(Boolean add){
        String str = jTextField1.getText();
        String tokens[] = str.split("[ ]+");
        str = "";
        if (add) {
            if(jToggleButton3.isSelected())
                tokens[2] = "ASx";
            else           
                tokens[2] = "S".concat(tokens[2]);
            jToggleButton4.setEnabled(false);
            flags.put("isAsteroid", true);
        } 
        else {
            tokens[2] = tokens[2].replace("S", "");
            jToggleButton4.setEnabled(true);
            flags.put("isAsteroid", false);
        }
        for (int i = 0; i < tokens.length; i++) {
            str = str + tokens[i] + " ";
        }
        jTextField1.setText(str);
    }
    public void AlterMultiple(Boolean add, String type) {
        String str = jTextField1.getText();
        String tokens[] = str.split("[ ]+");
        str = "";
        if (add) {
            switch (type) {
                case "Star":
                    tokens[1] = tokens[1].concat(" A");
                    break;
                case "Body":
                    tokens[2] = "A".concat(tokens[2]);
                    break;
            }
            flags.put("isMultiple", true);
        } else {
            switch (type) {
                case "Star":
                    tokens[2] = tokens[2].replace("A", " ");
                    break;
                case "Body":
                    tokens[2] = tokens[2].replace("A", "");
                    break;
            }
            flags.put("isMultiple", false);
        }
        for (int i = 0; i < tokens.length; i++) {
            str = str + tokens[i] + " ";
        }
        jTextField1.setText(str);
    }
    
    // Variables declaration - do not modify//GEN-BEGIN:variables
    public javax.swing.JButton jButton1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JComboBox<String> jList1;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JTextField jTextField1;
    private javax.swing.JTextField jTextField2;
    private javax.swing.JTextField jTextField3;
    private javax.swing.JToggleButton jToggleButton1;
    private javax.swing.JToggleButton jToggleButton2;
    private javax.swing.JToggleButton jToggleButton3;
    private javax.swing.JToggleButton jToggleButton4;
    private javax.swing.JToggleButton jToggleButton5;
    // End of variables declaration//GEN-END:variables
    Boolean previous = false;
    UserManager um = new UserManager();
    InsertManager im;
    Galaxy gal;
    Map flags = new Hashtable();
   

    /**
     *
     */
    @Override
    public void componentOpened() {
    }

    /**
     *
     */
    @Override
    public void componentClosed() {
    }

    void writeProperties(java.util.Properties p) {
        // better to version settings since initial version as advocated at
        // http://wiki.apidesign.org/wiki/PropertyFiles
        p.setProperty("version", "1.0");
        // TODO store your settings
    }

    void readProperties(java.util.Properties p) {
        String version = p.getProperty("version");
        // TODO read your settings according to their version
    }
}
